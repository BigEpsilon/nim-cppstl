CppString	cppstl/string.html#CppString	string: CppString	
CppStrIterator	cppstl/string.html#CppStrIterator	string: CppStrIterator	
CppStrConstIterator	cppstl/string.html#CppStrConstIterator	string: CppStrConstIterator	
std_npos	cppstl/string.html#std_npos	string: std_npos	
initCppString	cppstl/string.html#initCppString	string: initCppString(): CppString	
initCppString	cppstl/string.html#initCppString,CppString	string: initCppString(str: CppString): CppString	
initCppString	cppstl/string.html#initCppString,CppString,csize_t	string: initCppString(str: CppString; pos: csize_t): CppString	
initCppString	cppstl/string.html#initCppString,CppString,csize_t,csize_t	string: initCppString(str: CppString; pos, len: csize_t): CppString	
initCppString	cppstl/string.html#initCppString,cstring	string: initCppString(s: cstring): CppString	
initCppString	cppstl/string.html#initCppString,cstring,csize_t	string: initCppString(s: cstring; n: csize_t): CppString	
initCppString	cppstl/string.html#initCppString,CppStrConstIterator,CppStrConstIterator	string: initCppString(first, last: CppStrConstIterator): CppString	
begin	cppstl/string.html#begin,CppString	string: begin(x: CppString): CppStrIterator	
`end`	cppstl/string.html#end,CppString	string: `end`(x: CppString): CppStrIterator	
rbegin	cppstl/string.html#rbegin,CppString	string: rbegin(x: CppString): CppStrIterator	
rend	cppstl/string.html#rend,CppString	string: rend(x: CppString): CppStrIterator	
cbegin	cppstl/string.html#cbegin,CppString	string: cbegin(x: CppString): CppStrConstIterator	
cend	cppstl/string.html#cend,CppString	string: cend(x: CppString): CppStrConstIterator	
crbegin	cppstl/string.html#crbegin,CppString	string: crbegin(x: CppString): CppStrConstIterator	
crend	cppstl/string.html#crend,CppString	string: crend(x: CppString): CppStrConstIterator	
size	cppstl/string.html#size,CppString	string: size(self: CppString): csize_t	
length	cppstl/string.html#length,CppString	string: length(s: CppString): csize_t	
max_size	cppstl/string.html#max_size,CppString	string: max_size(self: CppString): csize_t	
resize	cppstl/string.html#resize,CppString,csize_t	string: resize(self: CppString; n: csize_t)	
capacity	cppstl/string.html#capacity,CppString	string: capacity(self: CppString): csize_t	
reserve	cppstl/string.html#reserve,CppString,csize_t	string: reserve(self: var CppString; n: csize_t)	
clear	cppstl/string.html#clear,CppString	string: clear(self: var CppString)	
empty	cppstl/string.html#empty,CppString	string: empty(self: CppString): bool	
shrink_to_fit	cppstl/string.html#shrink_to_fit,CppString	string: shrink_to_fit(self: var CppString)	
at	cppstl/string.html#at,CppString,csize_t	string: at(self: var CppString; n: csize_t): var cchar	
at	cppstl/string.html#at,CppString,csize_t_2	string: at(self: CppString; n: csize_t): cchar	
front	cppstl/string.html#front,CppString	string: front(self: CppString): cchar	
front	cppstl/string.html#front,CppString_2	string: front(self: var CppString): var cchar	
back	cppstl/string.html#back,CppString	string: back(self: CppString): cchar	
back	cppstl/string.html#back,CppString_2	string: back(self: var CppString): var cchar	
`+=`	cppstl/string.html#+=,CppString,CppString	string: `+=`(self: var CppString; str: CppString): var CppString	
`+=`	cppstl/string.html#+=,CppString,cstring	string: `+=`(self: var CppString; str: cstring): var CppString	
`+=`	cppstl/string.html#+=,CppString,cchar	string: `+=`(self: var CppString; str: cchar): var CppString	
append	cppstl/string.html#append,CppString,CppString	string: append(self: var CppString; str: CppString): var CppString	
append	cppstl/string.html#append,CppString,CppString,csize_t,csize_t	string: append(self: var CppString; str: CppString; subpos, sublen: csize_t): var CppString	
append	cppstl/string.html#append,CppString,cstring	string: append(self: var CppString; str: cstring): var CppString	
append	cppstl/string.html#append,CppString,cstring,csize_t	string: append(self: var CppString; str: cstring; n: csize_t): var CppString	
append	cppstl/string.html#append,CppString,csize_t,cchar	string: append(self: var CppString; n: csize_t; str: cchar): var CppString	
append	cppstl/string.html#append,CppString,CppStrConstIterator,CppStrConstIterator	string: append(self: var CppString; first, last: CppStrConstIterator): var CppString	
push_back	cppstl/string.html#push_back,CppString,cchar	string: push_back(self: var CppString; x: cchar): var CppString	
assign	cppstl/string.html#assign,CppString,CppString	string: assign(self: var CppString; str: CppString): var CppString	
assign	cppstl/string.html#assign,CppString,CppString,csize_t,csize_t	string: assign(self: var CppString; str: CppString; subpos, sublen: csize_t): var CppString	
assign	cppstl/string.html#assign,CppString,cstring	string: assign(self: var CppString; str: cstring): var CppString	
assign	cppstl/string.html#assign,CppString,cstring,csize_t	string: assign(self: var CppString; str: cstring; n: csize_t): var CppString	
assign	cppstl/string.html#assign,CppString,csize_t,cchar	string: assign(self: var CppString; n: csize_t; c: cchar): var CppString	
assign	cppstl/string.html#assign,CppString,CppStrConstIterator,CppStrConstIterator	string: assign(self: var CppString; first, last: CppStrConstIterator): var CppString	
insert	cppstl/string.html#insert,CppString,csize_t,CppString	string: insert(self: var CppString; pos: csize_t; str: CppString): var CppString	
insert	cppstl/string.html#insert,CppString,csize_t,CppString,csize_t,csize_t	string: insert(self: var CppString; pos: csize_t; str: CppString;\n       subpos, sublen: csize_t): var CppString	
insert	cppstl/string.html#insert,CppString,csize_t,cstring	string: insert(self: var CppString; pos: csize_t; s: cstring): var CppString	
insert	cppstl/string.html#insert,CppString,csize_t,cstring,csize_t	string: insert(self: var CppString; pos: csize_t; s: cstring; n: csize_t): var CppString	
insert	cppstl/string.html#insert,CppString,csize_t,csize_t,cchar	string: insert(self: var CppString; p, n: csize_t; c: cchar): var CppString	
insert	cppstl/string.html#insert,CppString,CppStrConstIterator,csize_t,cchar	string: insert(self: var CppString; p: CppStrConstIterator; n: csize_t; c: cchar): var CppString	
insert	cppstl/string.html#insert,CppString,CppStrConstIterator,cchar	string: insert(self: var CppString; p: CppStrConstIterator; c: cchar): var CppString	
insert	cppstl/string.html#insert,CppString,CppStrIterator,CppStrConstIterator,CppStrConstIterator	string: insert(self: var CppString; p: CppStrIterator; first, last: CppStrConstIterator): var CppString	
erase	cppstl/string.html#erase,CppString	string: erase(self: var CppString): CppStrIterator	
erase	cppstl/string.html#erase,CppString,csize_t,csize_t	string: erase(self: var CppString; pos: csize_t; l: csize_t = std_npos): var CppString	
erase	cppstl/string.html#erase,CppString,CppStrIterator	string: erase(self: var CppString; pos: CppStrIterator): CppStrIterator	
erase	cppstl/string.html#erase,CppString,CppStrIterator,CppStrIterator	string: erase(self: var CppString; first, last: CppStrIterator): CppStrIterator	
replace	cppstl/string.html#replace,CppString,csize_t,csize_t,CppString	string: replace(self: var CppString; pos, l: csize_t; str: CppString): var CppString	
replace	cppstl/string.html#replace,CppString,CppStrConstIterator,CppStrConstIterator,CppString	string: replace(self: var CppString; i1, i2: CppStrConstIterator; str: CppString): var CppString	
replace	cppstl/string.html#replace,CppString,csize_t,csize_t,CppString,csize_t,csize_t	string: replace(self: var CppString; pos, l: csize_t; str: CppString;\n        subpos, subl: csize_t): var CppString	
replace	cppstl/string.html#replace,CppString,csize_t,csize_t,cstring	string: replace(self: var CppString; pos, l: csize_t; s: cstring): var CppString	
replace	cppstl/string.html#replace,CppString,CppStrConstIterator,CppStrConstIterator,cstring	string: replace(self: var CppString; i1, i2: CppStrConstIterator; s: cstring): var CppString	
replace	cppstl/string.html#replace,CppString,csize_t,csize_t,cstring,csize_t	string: replace(self: var CppString; pos, l: csize_t; s: cstring; n: csize_t): var CppString	
replace	cppstl/string.html#replace,CppString,CppStrConstIterator,CppStrConstIterator,cstring,csize_t	string: replace(self: var CppString; i1, i2: CppStrConstIterator; s: cstring; n: csize_t): var CppString	
replace	cppstl/string.html#replace,CppString,csize_t,csize_t,csize_t,cchar	string: replace(self: var CppString; pos, l: csize_t; n: csize_t; c: cchar): var CppString	
replace	cppstl/string.html#replace,CppString,CppStrConstIterator,CppStrConstIterator,csize_t,cchar	string: replace(self: var CppString; i1, i2: CppStrConstIterator; n: csize_t; c: cchar): var CppString	
replace	cppstl/string.html#replace,CppString,CppStrConstIterator,CppStrConstIterator,CppStrConstIterator,CppStrConstIterator	string: replace(self: var CppString; i1, i2: CppStrConstIterator;\n        first, last: CppStrConstIterator): var CppString	
swap	cppstl/string.html#swap,CppString,CppString	string: swap(self: var CppString; x: var CppString)	
pop_back	cppstl/string.html#pop_back,CppString	string: pop_back(self: var CppString)	
c_str	cppstl/string.html#c_str,CppString	string: c_str(self: CppString): cstring	
data	cppstl/string.html#data,CppString	string: data(self: CppString): ptr cchar	
copy	cppstl/string.html#copy,CppString,ptr.cchar,csize_t,csize_t	string: copy(self: CppString; s: ptr cchar; l: csize_t; pos: csize_t = 0): csize_t	
find	cppstl/string.html#find,CppString,CppString,csize_t	string: find(self, str: CppString; pos: csize_t = 0): csize_t	
find	cppstl/string.html#find,CppString,CppString,csize_t,csize_t	string: find(self, str: CppString; pos, n: csize_t): csize_t	
find	cppstl/string.html#find,CppString,cstring,csize_t	string: find(self: CppString; s: cstring; pos: csize_t = 0): csize_t	
find	cppstl/string.html#find,CppString,cstring,csize_t,csize_t	string: find(self: CppString; s: cstring; pos, n: csize_t): csize_t	
find	cppstl/string.html#find,CppString,cchar,csize_t	string: find(self: CppString; c: cchar; pos: csize_t = 0): csize_t	
rfind	cppstl/string.html#rfind,CppString,CppString,csize_t	string: rfind(self, str: CppString; pos: csize_t = std_npos): csize_t	
rfind	cppstl/string.html#rfind,CppString,CppString,csize_t,csize_t	string: rfind(self: CppString; s: CppString; pos, n: csize_t): csize_t	
rfind	cppstl/string.html#rfind,CppString,cstring,csize_t	string: rfind(self: CppString; s: cstring; pos: csize_t = std_npos): csize_t	
rfind	cppstl/string.html#rfind,CppString,cstring,csize_t,csize_t	string: rfind(self: CppString; s: cstring; pos, n: csize_t): csize_t	
rfind	cppstl/string.html#rfind,CppString,cchar,csize_t	string: rfind(self: CppString; c: cchar; pos: csize_t = std_npos): csize_t	
find_first_of	cppstl/string.html#find_first_of,CppString,CppString,csize_t	string: find_first_of(self, str: CppString; pos: csize_t = 0): csize_t	
find_first_of	cppstl/string.html#find_first_of,CppString,CppString,csize_t,csize_t	string: find_first_of(self, str: CppString; pos, n: csize_t): csize_t	
find_first_of	cppstl/string.html#find_first_of,CppString,cstring,csize_t	string: find_first_of(self: CppString; s: cstring; pos: csize_t = 0): csize_t	
find_first_of	cppstl/string.html#find_first_of,CppString,cstring,csize_t,csize_t	string: find_first_of(self: CppString; s: cstring; pos, n: csize_t): csize_t	
find_first_of	cppstl/string.html#find_first_of,CppString,cchar,csize_t	string: find_first_of(self: CppString; c: cchar; pos: csize_t = 0): csize_t	
find_last_of	cppstl/string.html#find_last_of,CppString,CppString,csize_t	string: find_last_of(self, str: CppString; pos: csize_t = std_npos): csize_t	
find_last_of	cppstl/string.html#find_last_of,CppString,CppString,csize_t,csize_t	string: find_last_of(self: CppString; s: CppString; pos, n: csize_t): csize_t	
find_last_of	cppstl/string.html#find_last_of,CppString,cstring,csize_t	string: find_last_of(self: CppString; s: cstring; pos: csize_t = std_npos): csize_t	
find_last_of	cppstl/string.html#find_last_of,CppString,cstring,csize_t,csize_t	string: find_last_of(self: CppString; s: cstring; pos, n: csize_t): csize_t	
find_last_of	cppstl/string.html#find_last_of,CppString,cchar,csize_t	string: find_last_of(self: CppString; c: cchar; pos: csize_t = std_npos): csize_t	
find_first_not_of	cppstl/string.html#find_first_not_of,CppString,CppString,csize_t	string: find_first_not_of(self, str: CppString; pos: csize_t = 0): csize_t	
find_first_not_of	cppstl/string.html#find_first_not_of,CppString,CppString,csize_t,csize_t	string: find_first_not_of(self, str: CppString; pos, n: csize_t): csize_t	
find_first_not_of	cppstl/string.html#find_first_not_of,CppString,cstring,csize_t	string: find_first_not_of(self: CppString; s: cstring; pos: csize_t = 0): csize_t	
find_first_not_of	cppstl/string.html#find_first_not_of,CppString,cstring,csize_t,csize_t	string: find_first_not_of(self: CppString; s: cstring; pos, n: csize_t): csize_t	
find_first_not_of	cppstl/string.html#find_first_not_of,CppString,cchar,csize_t	string: find_first_not_of(self: CppString; c: cchar; pos: csize_t = 0): csize_t	
find_last_not_of	cppstl/string.html#find_last_not_of,CppString,CppString,csize_t	string: find_last_not_of(self, str: CppString; pos: csize_t = std_npos): csize_t	
find_last_not_of	cppstl/string.html#find_last_not_of,CppString,CppString,csize_t,csize_t	string: find_last_not_of(self, str: CppString; pos, n: csize_t): csize_t	
find_last_not_of	cppstl/string.html#find_last_not_of,CppString,cstring,csize_t	string: find_last_not_of(self: CppString; s: cstring; pos: csize_t = std_npos): csize_t	
find_last_not_of	cppstl/string.html#find_last_not_of,CppString,cstring,csize_t,csize_t	string: find_last_not_of(self: CppString; s: cstring; pos, n: csize_t): csize_t	
find_last_not_of	cppstl/string.html#find_last_not_of,CppString,cchar,csize_t	string: find_last_not_of(self: CppString; c: cchar; pos: csize_t = std_npos): csize_t	
substr	cppstl/string.html#substr,CppString,csize_t,csize_t	string: substr(self: CppString; pos: csize_t = 0; l: csize_t = std_npos): CppString	
compare	cppstl/string.html#compare,CppString,CppString	string: compare(self, str: CppString): cint	
compare	cppstl/string.html#compare,CppString,csize_t,csize_t,CppString	string: compare(self: CppString; pos, l: csize_t; str: CppString): cint	
compare	cppstl/string.html#compare,CppString,csize_t,csize_t,CppString,csize_t,csize_t	string: compare(self: CppString; pos, l: csize_t; str: CppString; subpos, subl: csize_t): cint	
compare	cppstl/string.html#compare,CppString,cstring	string: compare(self: CppString; s: cstring): cint	
compare	cppstl/string.html#compare,CppString,csize_t,csize_t,cstring	string: compare(self: CppString; pos, l: csize_t; str: cstring): cint	
compare	cppstl/string.html#compare,CppString,csize_t,csize_t,cstring,csize_t	string: compare(self: CppString; pos, l: csize_t; str: cstring; n: csize_t): cint	
compare	cppstl/string.html#compare,CppString,csize_t,csize_t,cstring,csize_t,csize_t	string: compare(self: CppString; pos, l: csize_t; str: cstring; subpos, subl: csize_t): cint	
`+`	cppstl/string.html#+,CppString,cchar	string: `+`(a: CppString; b: cchar): CppString	
`+`	cppstl/string.html#+,cchar,CppString	string: `+`(a: cchar; b: CppString): CppString	
`+`	cppstl/string.html#+,CppString,CppString	string: `+`(a: CppString; b: CppString): CppString	
`==`	cppstl/string.html#==,CppString,CppString	string: `==`(a: CppString; b: CppString): bool	
`!=`	cppstl/string.html#!=,CppString,CppString	string: `!=`(a: CppString; b: CppString): bool	
`&lt;`	cppstl/string.html#<,CppString,CppString	string: `&lt;`(a: CppString; b: CppString): bool	
`&lt;=`	cppstl/string.html#<=,CppString,CppString	string: `&lt;=`(a: CppString; b: CppString): bool	
`&gt;`	cppstl/string.html#>,CppString,CppString	string: `&gt;`(a: CppString; b: CppString): bool	
`&gt;=`	cppstl/string.html#>=,CppString,CppString	string: `&gt;=`(a: CppString; b: CppString): bool	
CppStrIteratorToStrConstIterator	cppstl/string.html#CppStrIteratorToStrConstIterator.c,CppStrIterator	string: CppStrIteratorToStrConstIterator(s: CppStrIterator): CppStrConstIterator	
initCppString	cppstl/string.html#initCppString,string	string: initCppString(s: string): CppString	
`+`	cppstl/string.html#+,CppString,	string: `+`(a: CppString; b: string | cstring): CppString	
`==`	cppstl/string.html#==,CppString,	string: `==`(a: CppString; b: string | cstring): bool	
`!=`	cppstl/string.html#!=,CppString,	string: `!=`(a: CppString; b: string | cstring): bool	
`&lt;`	cppstl/string.html#<,CppString,	string: `&lt;`(a: CppString; b: string | cstring): bool	
`&lt;=`	cppstl/string.html#<=,CppString,	string: `&lt;=`(a: CppString; b: string | cstring): bool	
`&gt;`	cppstl/string.html#>,CppString,	string: `&gt;`(a: CppString; b: string | cstring): bool	
`&gt;=`	cppstl/string.html#>=,CppString,	string: `&gt;=`(a: CppString; b: string | cstring): bool	
`+`	cppstl/string.html#+,,CppString	string: `+`(a: string | cstring; b: CppString): CppString	
`==`	cppstl/string.html#==,,CppString	string: `==`(a: string | cstring; b: CppString): bool	
`!=`	cppstl/string.html#!=,,CppString	string: `!=`(a: string | cstring; b: CppString): bool	
`&lt;`	cppstl/string.html#<,,CppString	string: `&lt;`(a: string | cstring; b: CppString): bool	
`&lt;=`	cppstl/string.html#<=,,CppString	string: `&lt;=`(a: string | cstring; b: CppString): bool	
`&gt;`	cppstl/string.html#>,,CppString	string: `&gt;`(a: string | cstring; b: CppString): bool	
`&gt;=`	cppstl/string.html#>=,,CppString	string: `&gt;=`(a: string | cstring; b: CppString): bool	
`[]`	cppstl/string.html#[],CppString,Natural	string: `[]`(self: CppString; idx: Natural): cchar	
`[]`	cppstl/string.html#[],CppString,Natural_2	string: `[]`(self: var CppString; idx: Natural): var cchar	
`[]=`	cppstl/string.html#[]=,CppString,Natural,cchar	string: `[]=`(self: var CppString; idx: Natural; val: cchar)	
`$`	cppstl/string.html#$,CppString	string: `$`(s: CppString): string	
`+`	cppstl/string.html#+,T,int	string: `+`[T: CppStrIterator](it`gensym5: T; offset`gensym5: int): T	
`-`	cppstl/string.html#-,T,int	string: `-`[T: CppStrIterator](it`gensym5: T; offset`gensym5: int): T	
`+`	cppstl/string.html#+,T,int_2	string: `+`[T: CppStrConstIterator](it`gensym6: T; offset`gensym6: int): T	
`-`	cppstl/string.html#-,T,int_2	string: `-`[T: CppStrConstIterator](it`gensym6: T; offset`gensym6: int): T	
